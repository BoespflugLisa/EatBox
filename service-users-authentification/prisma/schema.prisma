generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Roles {
  id    Int     @id @default(autoincrement())
  title String
  user  Users[]
}

model Clients {
  id        Int     @id @default(autoincrement())
  fk_user   Int     @unique
  Lastname  String
  Firstname String
  Address   Json?
  Phone     String?
  user      Users   @relation(fields: [fk_user], references: [id])
}

model Livreurs {
  id           Int     @id @default(autoincrement())
  fk_user      Int     @unique
  Lastname     String
  Firstname    String
  Phone        String
  ProfileImg   String?
  Open_to_work Boolean
  Free         Boolean
  AccountName  String?
  IBAN         String?
  user         Users   @relation(fields: [fk_user], references: [id])
}

model Restaurants {
  id          Int     @id @default(autoincrement())
  fk_user     Int     @unique
  Name        String
  Phone       String?
  Address     Json?
  hours       Json?
  Type        String?
  CoverImg    String? @db.LongText
  Legal       Json?
  Preferences Json?
  Sponsors    Json?
  user        Users   @relation(fields: [fk_user], references: [id])
}

model Developers {
  id        Int    @id @default(autoincrement())
  fk_user   Int    @unique
  Lastname  String
  Firstname String
  user      Users  @relation(fields: [fk_user], references: [id])
}

model Token {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  value     String
  userId    Int
  user      Users    @relation(fields: [userId], references: [id])

  @@index([userId], map: "Token_userId_fkey")
}

model Users {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  Password    String
  fk_role     Int
  role        Roles        @relation(fields: [fk_role], references: [id])
  clients     Clients?
  developers  Developers?
  deliverymen Livreurs?
  restaurants Restaurants?
  tokens      Token[]

  @@index([fk_role], map: "Users_fk_role_fkey")
}

model Components {
  id        Int    @id @default(autoincrement())
  name      String
  downloads Int
}

model Services {
  id          Int    @id @default(autoincrement())
  name        String
  IP          String
  Description String
  Port        Int
  URL         String
  Type        String
}
